// ------------------  prisma/schema.prisma  ------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Car {
  id               String   @id @default(cuid())
  dealerId         String?  // new nullable tenant ID
  title            String
  brand            String
  model            String
  variant          String?
  price            BigInt // keeps very large INR safely
  year             Int
  fuelType         String
  transmission     String
  kmDriven         Int
  location         String
  images           Json     @default("[]") // was String
  description      String
  sellerType       String
  postedDate       String
  owners           Int
  isVerified       Boolean  @default(false)
  isFeatured       Boolean  @default(false)
  dataSource       String
  olxProfile       String?
  olxProfileId     String?
  originalUrl      String?
  attribution      String?
  carStreetsListed Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  manuallyEdited   Boolean  @default(false) // Track if user edited this car
  editedFields     Json     @default("[]") // Track which fields were edited
  lastScrapedAt    DateTime @default(now()) // When this was last scraped
  isUserAdded      Boolean  @default(false) // True for cars added via "Add Car" button
  scrapedData      Json? // Store original scraped data for comparison

  // Relations
  contentCalendar ContentCalendar[]

  @@map("cars")
}

model ContentCalendar {
  id       String @id @default(cuid())
  carId    String
  dealerId     String?  // new nullable tenant ID for tenant scoping
  platform String // 'instagram', 'facebook', 'linkedin'

  // Generated Content
  textContent   String
  hashtags      String[]
  originalImage String? // Cloudinary URL from Car.images
  brandedImage  String? // nano-banana result URL

  // Scheduling & Approval  
  status        String    @default("draft") // 'draft', 'approved', 'scheduled', 'posted'
  scheduledDate DateTime?
  approvedBy    String?
  approvedAt    DateTime?

  // Quality & Cost Tracking
  uniquenessScore Int      @default(92) // Your 92% scores
  generationCost  Float    @default(0.039)
  brandingApplied String[] // ['logo', 'price', 'location']

  // Auto-generation metadata
  autoGenerated  Boolean @default(true)
  requiresReview Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  car Car @relation(fields: [carId], references: [id], onDelete: Cascade)

  @@index([carId])
  @@index([status])
  @@index([scheduledDate])
}
model SocialMediaToken {
  id            String   @id @default(cuid())
  dealerId      String?  // new nullable tenant ID
  platform      String
  accessToken   String
  refreshToken  String?
  expiresAt     DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  @@index([dealerId])
}

model SocialPost {
  id               String    @id @default(cuid())
  dealerId         String?   // new nullable tenant ID
  platform         String
  status           String
  scheduledAt      DateTime?
  postedAt         DateTime?
  failureReason    String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  @@index([dealerId])
}

model WhatsAppContact {
  id           String   @id @default(cuid())
  dealerId     String?  // new nullable tenant ID
  phoneNumber  String
  optedIn      Boolean  @default(false)
  name         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@index([dealerId])
}

model FestivalContent {
  id         String   @id @default(cuid())
  dealerId   String?  // new nullable tenant ID
  festival   String
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@index([dealerId])
}